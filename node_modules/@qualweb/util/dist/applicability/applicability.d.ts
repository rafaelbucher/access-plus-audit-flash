export declare function ElementExists(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementIsHTMLElement(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementHasAttributes(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementHasAttribute(attribute: string): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => void;
export declare function ElementHasNonEmptyAttribute(attribute: string): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => void;
export declare function ElementHasAttributeRole(role: string): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => void;
export declare function ElementHasAttributeValue(attribute: string, value: string): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => void;
export declare function IfElementHasTagNameMustHaveAttributeRole(tagName: string, role: string): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => void;
export declare function ElementHasText(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementHasTextNode(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementIsInAccessibilityTree(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementHasNegativeTabIndex(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementIsNotHidden(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementSrcAttributeFilenameEqualsAccessibleName(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function IsInMainContext(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementIsVisible(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementIsNot(names: string[]): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => void;
export declare function ElementHasOneOfTheFollowingRoles(roles: string[]): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => void;
export declare function ElementIsWidget(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementIsNotWidget(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementAllowsNameFromContent(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementHasCSSRules(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function IsLangSubTagValid(attribute: string): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => void;
export declare function ElementIsImage(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementIsNonText(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementIsSemanticLink(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementIsDataTable(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementHasAccessibleName(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementHasChild(child: string): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => void;
export declare function ElementHasVisibleChild(child: string): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => void;
export declare function ElementDoesNotHaveChild(child: string): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => void;
export declare function ElementHasParent(parent: string): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => void;
export declare function ElementIsNotChildOf(parent: string): (_target: any, _propertyKey: string, descriptor: PropertyDescriptor) => void;
export declare function ElementIsNotInert(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function ElementIsVisibleOrInAccessibilityTree(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
export declare function IsHTMLDocument(_target: any, _propertyKey: string, descriptor: PropertyDescriptor): void;
//# sourceMappingURL=applicability.d.ts.map