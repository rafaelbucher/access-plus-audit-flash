"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.QW_ACT_R62 = void 0;
const applicability_1 = require("@qualweb/util/applicability");
const evaluation_1 = require("@qualweb/core/evaluation");
const AtomicRule_object_1 = require("../lib/AtomicRule.object");
class QW_ACT_R62 extends AtomicRule_object_1.AtomicRule {
    execute(element) {
        const elementList = element.getElements('*');
        const inSequentialFocusList = elementList.filter((element) => {
            return window.AccessibilityUtils.isPartOfSequentialFocusNavigation(element);
        });
        if (inSequentialFocusList.length >= 1) {
            for (const inSequentialFocusElement of inSequentialFocusList !== null && inSequentialFocusList !== void 0 ? inSequentialFocusList : []) {
                const test = new evaluation_1.Test(evaluation_1.Verdict.WARNING, undefined, 'W1');
                test.addElement(inSequentialFocusElement);
                this.addTestResult(test);
            }
        }
    }
}
exports.QW_ACT_R62 = QW_ACT_R62;
__decorate([
    applicability_1.ElementExists,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Function]),
    __metadata("design:returntype", void 0)
], QW_ACT_R62.prototype, "execute", null);
