"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.QW_ACT_R33 = void 0;
const applicability_1 = require("@qualweb/util/applicability");
const evaluation_1 = require("@qualweb/core/evaluation");
const AtomicRule_object_1 = require("../lib/AtomicRule.object");
class QW_ACT_R33 extends AtomicRule_object_1.AtomicRule {
    execute(element) {
        const roles = window.AccessibilityUtils.roles;
        const test = new evaluation_1.Test();
        const explicitRole = window.AccessibilityUtils.getElementValidExplicitRole(element);
        const implicitRole = window.AccessibilityUtils.getImplicitRole(element, '');
        const isInAT = window.AccessibilityUtils.isElementInAT(element);
        const isValidRole = window.AccessibilityUtils.elementHasValidRole(element);
        if (explicitRole !== null &&
            isValidRole &&
            explicitRole !== implicitRole &&
            isInAT &&
            roles[explicitRole]['requiredContextRole'] !== '') {
            const requiredContextRole = roles[explicitRole]['requiredContextRole'];
            const id = element.getElementAttribute('id');
            const ariaOwns = window.qwPage.getElement('[aria-owns' + `~="${id}"]`, element);
            if (ariaOwns !== null) {
                const ariaOwnsRole = window.AccessibilityUtils.getElementRole(ariaOwns);
                if (ariaOwnsRole && requiredContextRole.includes(ariaOwnsRole)) {
                    test.verdict = evaluation_1.Verdict.PASSED;
                    test.resultCode = 'P1';
                }
                else {
                    test.verdict = evaluation_1.Verdict.FAILED;
                    test.resultCode = 'F1';
                }
            }
            else if (this.isElementADescendantOf(element, requiredContextRole)) {
                test.verdict = evaluation_1.Verdict.PASSED;
                test.resultCode = 'P1';
            }
            else {
                test.verdict = evaluation_1.Verdict.FAILED;
                test.resultCode = 'F1';
            }
            test.addElement(element);
            this.addTestResult(test);
        }
    }
    isElementADescendantOf(element, roles) {
        let parent = element.getElementParent();
        if (!parent) {
            const documentSelector = element.getElementAttribute('_documentSelector');
            if (!!documentSelector && !documentSelector.includes('iframe')) {
                parent = window.qwPage.getElement(documentSelector);
            }
        }
        let result = false;
        let sameRole = false;
        if (parent !== null) {
            const parentRole = window.AccessibilityUtils.getElementRole(parent);
            if (parentRole !== null) {
                sameRole = roles.includes(parentRole);
            }
            result = sameRole;
            if (parentRole === null || parentRole === 'presentation' || parentRole === 'none') {
                return this.isElementADescendantOf(parent, roles);
            }
            else {
                return result;
            }
        }
        else {
            return result;
        }
    }
}
exports.QW_ACT_R33 = QW_ACT_R33;
__decorate([
    applicability_1.ElementExists,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Function]),
    __metadata("design:returntype", void 0)
], QW_ACT_R33.prototype, "execute", null);
