"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.QW_ACT_R28 = void 0;
const applicability_1 = require("@qualweb/util/applicability");
const evaluation_1 = require("@qualweb/core/evaluation");
const AtomicRule_object_1 = require("../lib/AtomicRule.object");
class QW_ACT_R28 extends AtomicRule_object_1.AtomicRule {
    execute(element) {
        const rolesJSON = window.AccessibilityUtils.roles;
        const allElements = element.getElements('[role]');
        for (const elem of allElements || []) {
            const test = new evaluation_1.Test();
            const elemRole = elem.getElementAttribute('role');
            const elemAttribs = elem.getElementAttributesName();
            const implicitRole = window.AccessibilityUtils.getImplicitRole(elem, '');
            const isInAT = window.AccessibilityUtils.isElementInAT(elem);
            if (isInAT && implicitRole !== elemRole && elemRole !== null && Object.keys(rolesJSON).includes(elemRole)) {
                if (rolesJSON[elemRole]['requiredAria']) {
                    const implicitRoles = new Array();
                    const implicitValueRoles = rolesJSON[elemRole]['implicitValueRoles'];
                    for (const role of implicitValueRoles || []) {
                        if (role[0] !== '') {
                            implicitRoles.push(role[0]);
                        }
                    }
                    let i = 0;
                    const requiredAriaList = rolesJSON[elemRole]['requiredAria'];
                    if (elemRole === 'separator') {
                        if (!window.AccessibilityUtils.isElementFocusable(elem)) {
                            const index = requiredAriaList.indexOf('aria-valuenow');
                            if (index > -1) {
                                requiredAriaList.splice(index, 1);
                            }
                        }
                    }
                    let result = true;
                    let requiredAria;
                    while (i < requiredAriaList.length && result) {
                        requiredAria = requiredAriaList[i];
                        if (elemAttribs && elemAttribs.includes(requiredAria) && !implicitRoles.includes(requiredAria)) {
                            const attrValue = elem.getElementAttribute(requiredAria);
                            result = (attrValue ? attrValue.trim() : '') !== '';
                        }
                        else {
                            result = implicitRoles.includes(requiredAria);
                        }
                        i++;
                    }
                    if (result) {
                        test.verdict = evaluation_1.Verdict.PASSED;
                        test.resultCode = 'P1';
                    }
                    else {
                        test.verdict = evaluation_1.Verdict.FAILED;
                        test.resultCode = 'F1';
                    }
                }
                else {
                    test.verdict = evaluation_1.Verdict.PASSED;
                    test.resultCode = 'P2';
                }
                test.addElement(elem);
                this.addTestResult(test);
            }
        }
    }
}
exports.QW_ACT_R28 = QW_ACT_R28;
__decorate([
    applicability_1.ElementExists,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Function]),
    __metadata("design:returntype", void 0)
], QW_ACT_R28.prototype, "execute", null);
