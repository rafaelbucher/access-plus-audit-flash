import type { ModuleTranslator } from '@qualweb/core/locale';
import type { TranslationValues } from '@qualweb/locale';
import type { Assertion, Level, Principle } from '@qualweb/core/evaluation';
import { Guideline, type Test } from '@qualweb/core/evaluation';
declare abstract class Rule extends Guideline {
    protected readonly rule: Assertion;
    private readonly translator;
    constructor(translator: ModuleTranslator);
    protected translate(resultCode: string, values?: TranslationValues): string;
    getCode(): string;
    getMapping(): string;
    hasPrincipleAndLevels(principles: Principle[], levels: Level[]): boolean;
    getFinalResults(): Assertion;
    protected addTestResult(test: Test): void;
    private generateOutcome;
    private addDescription;
}
export { Rule };
//# sourceMappingURL=Rule.object.d.ts.map