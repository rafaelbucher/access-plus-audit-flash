import type { Assertion } from '@qualweb/core/evaluation';
import type { QWElement } from '@qualweb/qw-element';
import type { ElementResult, RuleResult } from './types';
import { Rule } from './Rule.object';
declare abstract class CompositeRule extends Rule {
    abstract execute(element?: QWElement, rules?: Assertion[]): void;
    conjunction(element: QWElement, rules: Assertion[]): void;
    disjunction(element: QWElement, rules: Assertion[]): void;
    getAtomicRuleResultPerVerdict(selector: string, rules: Assertion[]): RuleResult;
    getAtomicRuleResultForElement(selector: string, rules: Assertion[]): ElementResult;
}
export { CompositeRule };
//# sourceMappingURL=CompositeRule.object.d.ts.map