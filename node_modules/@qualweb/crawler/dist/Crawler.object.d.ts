import { Browser, BrowserContext, Viewport } from 'puppeteer';
import type { CrawlOptions } from './CrawlOptions';
import type { PuppeteerLifeCycleEvent as LoadEvent } from 'puppeteer';
declare class Crawler {
    private readonly browser;
    private readonly viewport?;
    private readonly startingUrl;
    private readonly isDomain;
    private readonly waitUntil;
    private urls;
    constructor(browser: Browser | BrowserContext, startingUrl: string, viewport?: Viewport, waitUntil?: LoadEvent | LoadEvent[]);
    private verifyStartingUrl;
    private isStaringUrlADomain;
    crawl(options?: CrawlOptions): Promise<void>;
    private log;
    private addUrlsToCrawl;
    private fetchPageLinks;
    private checkRelativePathsUrls;
    private normalizeAndSort;
    getResults(): Array<string>;
}
export { Crawler };
//# sourceMappingURL=Crawler.object.d.ts.map