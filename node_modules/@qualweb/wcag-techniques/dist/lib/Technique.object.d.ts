import type { ModuleTranslator } from '@qualweb/core/locale';
import type { TranslationValues } from '@qualweb/locale';
import type { QWElement } from '@qualweb/qw-element';
import type { Assertion, Level, Principle, Test } from '@qualweb/core/evaluation';
import { Guideline } from '@qualweb/core/evaluation';
declare abstract class Technique extends Guideline {
    protected readonly technique: Assertion;
    private readonly translator;
    constructor(translator: ModuleTranslator);
    protected translate(resultCode: string, values?: TranslationValues): string;
    getCode(): string;
    getMapping(): string;
    hasPrincipleAndLevels(principles: Principle[], levels: Level[]): boolean;
    abstract execute(element?: QWElement): void;
    getFinalResults(): Assertion;
    protected addTestResult(test: Test): void;
    private generateOutcome;
    private addDescription;
}
export { Technique };
//# sourceMappingURL=Technique.object.d.ts.map